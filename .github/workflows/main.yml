name: CI/CD

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  IMAGE_NAME: ${{ github.event.repository.name }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  
  # This workflow contains a single job called "build"
#   docker-build-and-push:
#     # The type of runner that the job will run on
#     runs-on: ubuntu-22.04
#     strategy:
#       fail-fast: false
#       matrix:
#         include:
#           - dockerfile: ./service-1/Dockerfile
#             image: service-1
#           - dockerfile: ./service-2/Dockerfile
#             image: service-2

#     # Steps represent a sequence of tasks that will be executed as part of the job
#     steps:
#       -
#         name: Set up Docker Buildx
#         id: buildx
#         uses: docker/setup-buildx-action@v2
#       -
#         name: Login to DockerHub
#         uses: docker/login-action@v2
#         with:
#           username: ${{ secrets.DOCKERHUB_USERNAME }}
#           password: ${{ secrets.DOCKERHUB_TOKEN }}
#       - 
#         name: Checkout
#         uses: actions/checkout@v2
#       - 
#         name: Build and push Docker images
#         uses: docker/build-push-action@v3.1.1
#         with:
#           context: ${{ matrix.image }}
#           file: ${{ matrix.dockerfile }}
#           push: true
#           tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.image }}:latest
  
  helm-build: 
#     needs: [docker-build-and-push]
    runs-on: ubuntu-22.04
    steps: 
      - 
        name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.8.1
      - 
        name: Build Umbrella chart
        uses: helm/chart-releaser-action@v1.4.0
        with:
          charts_dir: helm/umbrella-chart
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
#   deploy-on-eks:
#     needs: [helm-build]
#     runs-on: ubuntu-22.04
#     steps:   
#       - 
#         name: Deploy on EKS
#         uses: peymanmortazavi/eks-helm-deploy@v1
#         with:   
#           aws-access-key-id: ${{ secrets.AWS_ACCESS__KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: eu-west-1
#           cluster-name: ex-ter
#           namespace: default
#           name: umbrella-chart
#           chart-path: helm/umbrella-chart
